For postgres i had went through two phases, the first one in which i was creating a function that inserts to 
multiple tables and multiple values at once. The function which i included worked on an earlier version of the project 
where i had a table that takes arrays to insert multiple doctors/illness etc...
after spending a long time on it i realized that i'm making things way harder than they need to be and i don't have enough
time to keep working on it and figure out things at a relatevly slow pace which i can't afford during finals, if after
looking at the function you have an idea about what was wrong in it i'd love to know, perhaps i could fix that when i'm
not in a rush. Anyway i ditched that path and started with a new route which is the version i submitted.
none the less, the function was working and it was correctly inserting the values to the tables if the relevant cells exist
and skipping if not. The problem was with creating a script that makes 10000 add_patient_func1 calls, i'll weirdly have {,,} or 
{{} which i couldn't figure out why(could be faker, which i also ditched because it kept complainging 
about not having enough unique values even on a relatevly low number like 750 for treatments).

PSQL

pros:
sQL gets easier the more i use it
very good for 1 level querying where you have each table is designed to hold a type of thing that you just 
query to get that thing.
i'm conflicted about pgAdmin so it's both in pros and cons, i don't hate it's UI and found it very user friendly, query 
tool was nice to work with too.

cons:
very bad and overly complicated with querying for things that mention other things on a different table
the syntax is little weird for programmers who don't use sql
viewing data in pgAdmin is little clonky(i might be using it wrong though). right click on a table then view data then all rows,
that seems little long for just viewing the data. also having to close the view data tab to see changes in data wasn't fun.

neo4j

pros:
very effecient with multilevel relations

cons: